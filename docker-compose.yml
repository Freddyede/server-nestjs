services:
  backend:
    build:
      context: . # Répertoire contenant le Dockerfile de NestJS
      dockerfile: Dockerfile
    container_name: nest-backend
    ports:
      - "3000:3000" # Expose le backend sur le port 3000
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=my-secret-password
      - DB_NAME=nest_angular_dev
    networks:
      - app-network

  mysql:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    container_name: mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: my-secret-password
      MYSQL_DATABASE: nest_angular_dev
      MYSQL_USER: nest_user
      MYSQL_PASSWORD: nest_password
    volumes:
      - db_data:/var/lib/mysql # Pour persister les données
      - ./mysql/nest_angular_dev.sql:/docker-entrypoint-initdb.d/init.sql:ro # Script d'initialisation
    networks:
      - app-network
  frontend:
    build:
      context: ./client  # Assurez-vous que le chemin pointe vers le dossier de votre app Angular
      dockerfile: Dockerfile
    container_name: angular-frontend
    ports:
      - "4200:4200"  # Mapper le port 4200 du conteneur vers le port 4200 sur l'hôte
    networks:
      - app-network
    environment:
      API_URL: http://backend:3000 # URL pour accéder au backend via le réseau Docker interne

networks:
  app-network:
    driver: bridge

volumes:
  db_data: